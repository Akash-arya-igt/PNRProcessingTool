@model IGT.PNRProcessing.BusinessEntities.GetTicketingFlowSettings

@{
    ViewBag.Title = "Ticketing Flow Configuration: Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Ticketing Flow Configuration: Edit</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.PCCName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.LabelFor(model => model.PCCName)
                @Html.ValidationMessageFor(model => model.PCCName)
                @Html.HiddenFor(model => model.FlowID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FlowName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.LabelFor(model => model.FlowName)
                @Html.ValidationMessageFor(model => model.FlowName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreFormatedRemark, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreFormatedRemark)
                @Html.ValidationMessageFor(model => model.PreFormatedRemark)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CommissionPct, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CommissionPct)
                @Html.ValidationMessageFor(model => model.CommissionPct)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CommissionRemarkFormat, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CommissionRemarkFormat)
                @Html.ValidationMessageFor(model => model.CommissionRemarkFormat)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowedFOPId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsCashFOP)&nbsp;Cash&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Html.EditorFor(model => model.IsCCFOP)&nbsp;Credit Card
                @Html.ValidationMessageFor(model => model.AllowedFOPId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowedFareType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsPublished)&nbsp;Published&nbsp;&nbsp;&nbsp;&nbsp;@Html.EditorFor(model => model.IsPrivate)&nbsp;Private
                @Html.ValidationMessageFor(model => model.AllowedFareType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCheckAVL, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsCheckAVL)
                @Html.ValidationMessageFor(model => model.IsCheckAVL)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCheckMCT, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsCheckMCT)
                @Html.ValidationMessageFor(model => model.IsCheckMCT)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SuccessQ, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuccessQ)
                @Html.ValidationMessageFor(model => model.SuccessQ)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SuccessMsg, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuccessMsg)
                @Html.ValidationMessageFor(model => model.SuccessMsg)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FailQ, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FailQ)
                @Html.ValidationMessageFor(model => model.FailQ)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FailMsg, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FailMsg)
                @Html.ValidationMessageFor(model => model.FailMsg)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TargetQNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TargetQNo)
                @Html.ValidationMessageFor(model => model.TargetQNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScanFrequency, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScanFrequency)
                @Html.ValidationMessageFor(model => model.ScanFrequency)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
